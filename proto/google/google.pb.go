// Code generated by protoc-gen-go.
// source: github.com/micro/geocode-srv/proto/google/google.proto
// DO NOT EDIT!

/*
Package google is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/geocode-srv/proto/google/google.proto

It has these top-level messages:
	Point
	Bounds
	AddressComponent
	Geometry
	Result
	GeocodeRequest
	GeocodeResponse
	ReverseRequest
	ReverseResponse
*/
package google

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Point struct {
	Lat float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng" json:"lng,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Bounds struct {
	Northeast *Point `protobuf:"bytes,1,opt,name=northeast" json:"northeast,omitempty"`
	Southwest *Point `protobuf:"bytes,2,opt,name=southwest" json:"southwest,omitempty"`
}

func (m *Bounds) Reset()                    { *m = Bounds{} }
func (m *Bounds) String() string            { return proto.CompactTextString(m) }
func (*Bounds) ProtoMessage()               {}
func (*Bounds) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Bounds) GetNortheast() *Point {
	if m != nil {
		return m.Northeast
	}
	return nil
}

func (m *Bounds) GetSouthwest() *Point {
	if m != nil {
		return m.Southwest
	}
	return nil
}

type AddressComponent struct {
	LongName  string   `protobuf:"bytes,1,opt,name=long_name" json:"long_name,omitempty"`
	ShortName string   `protobuf:"bytes,2,opt,name=short_name" json:"short_name,omitempty"`
	Types     []string `protobuf:"bytes,3,rep,name=types" json:"types,omitempty"`
}

func (m *AddressComponent) Reset()                    { *m = AddressComponent{} }
func (m *AddressComponent) String() string            { return proto.CompactTextString(m) }
func (*AddressComponent) ProtoMessage()               {}
func (*AddressComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Geometry struct {
	Bounds       *Bounds  `protobuf:"bytes,1,opt,name=bounds" json:"bounds,omitempty"`
	Location     *Point   `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	LocationType string   `protobuf:"bytes,3,opt,name=location_type" json:"location_type,omitempty"`
	Viewport     *Bounds  `protobuf:"bytes,4,opt,name=viewport" json:"viewport,omitempty"`
	PartialMatch bool     `protobuf:"varint,5,opt,name=partial_match" json:"partial_match,omitempty"`
	PlaceId      string   `protobuf:"bytes,6,opt,name=place_id" json:"place_id,omitempty"`
	Types        []string `protobuf:"bytes,7,rep,name=types" json:"types,omitempty"`
}

func (m *Geometry) Reset()                    { *m = Geometry{} }
func (m *Geometry) String() string            { return proto.CompactTextString(m) }
func (*Geometry) ProtoMessage()               {}
func (*Geometry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Geometry) GetBounds() *Bounds {
	if m != nil {
		return m.Bounds
	}
	return nil
}

func (m *Geometry) GetLocation() *Point {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Geometry) GetViewport() *Bounds {
	if m != nil {
		return m.Viewport
	}
	return nil
}

type Result struct {
	AddressComponents []*AddressComponent `protobuf:"bytes,1,rep,name=address_components" json:"address_components,omitempty"`
	FormattedAddress  string              `protobuf:"bytes,2,opt,name=formatted_address" json:"formatted_address,omitempty"`
	Geometry          *Geometry           `protobuf:"bytes,3,opt,name=geometry" json:"geometry,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Result) GetAddressComponents() []*AddressComponent {
	if m != nil {
		return m.AddressComponents
	}
	return nil
}

func (m *Result) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type GeocodeRequest struct {
	Address    string            `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Components map[string]string `protobuf:"bytes,2,rep,name=components" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Bounds     *Bounds           `protobuf:"bytes,3,opt,name=bounds" json:"bounds,omitempty"`
	Language   string            `protobuf:"bytes,4,opt,name=language" json:"language,omitempty"`
	Region     string            `protobuf:"bytes,5,opt,name=region" json:"region,omitempty"`
}

func (m *GeocodeRequest) Reset()                    { *m = GeocodeRequest{} }
func (m *GeocodeRequest) String() string            { return proto.CompactTextString(m) }
func (*GeocodeRequest) ProtoMessage()               {}
func (*GeocodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GeocodeRequest) GetComponents() map[string]string {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *GeocodeRequest) GetBounds() *Bounds {
	if m != nil {
		return m.Bounds
	}
	return nil
}

type GeocodeResponse struct {
	Results []*Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	Status  string    `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *GeocodeResponse) Reset()                    { *m = GeocodeResponse{} }
func (m *GeocodeResponse) String() string            { return proto.CompactTextString(m) }
func (*GeocodeResponse) ProtoMessage()               {}
func (*GeocodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GeocodeResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type ReverseRequest struct {
	Latlng       *Point   `protobuf:"bytes,1,opt,name=latlng" json:"latlng,omitempty"`
	PlaceId      string   `protobuf:"bytes,2,opt,name=place_id" json:"place_id,omitempty"`
	PlaceID      string   `protobuf:"bytes,3,opt,name=placeID" json:"placeID,omitempty"`
	Language     string   `protobuf:"bytes,4,opt,name=language" json:"language,omitempty"`
	ResultType   []string `protobuf:"bytes,5,rep,name=result_type" json:"result_type,omitempty"`
	LocationType []string `protobuf:"bytes,6,rep,name=location_type" json:"location_type,omitempty"`
}

func (m *ReverseRequest) Reset()                    { *m = ReverseRequest{} }
func (m *ReverseRequest) String() string            { return proto.CompactTextString(m) }
func (*ReverseRequest) ProtoMessage()               {}
func (*ReverseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ReverseRequest) GetLatlng() *Point {
	if m != nil {
		return m.Latlng
	}
	return nil
}

type ReverseResponse struct {
	Results []*Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	Status  string    `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *ReverseResponse) Reset()                    { *m = ReverseResponse{} }
func (m *ReverseResponse) String() string            { return proto.CompactTextString(m) }
func (*ReverseResponse) ProtoMessage()               {}
func (*ReverseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReverseResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Point)(nil), "Point")
	proto.RegisterType((*Bounds)(nil), "Bounds")
	proto.RegisterType((*AddressComponent)(nil), "AddressComponent")
	proto.RegisterType((*Geometry)(nil), "Geometry")
	proto.RegisterType((*Result)(nil), "Result")
	proto.RegisterType((*GeocodeRequest)(nil), "GeocodeRequest")
	proto.RegisterType((*GeocodeResponse)(nil), "GeocodeResponse")
	proto.RegisterType((*ReverseRequest)(nil), "ReverseRequest")
	proto.RegisterType((*ReverseResponse)(nil), "ReverseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Google service

type GoogleClient interface {
	Geocode(ctx context.Context, in *GeocodeRequest, opts ...client.CallOption) (*GeocodeResponse, error)
	ReverseGeocode(ctx context.Context, in *ReverseRequest, opts ...client.CallOption) (*ReverseResponse, error)
}

type googleClient struct {
	c           client.Client
	serviceName string
}

func NewGoogleClient(serviceName string, c client.Client) GoogleClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "google"
	}
	return &googleClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *googleClient) Geocode(ctx context.Context, in *GeocodeRequest, opts ...client.CallOption) (*GeocodeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Google.Geocode", in)
	out := new(GeocodeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleClient) ReverseGeocode(ctx context.Context, in *ReverseRequest, opts ...client.CallOption) (*ReverseResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Google.ReverseGeocode", in)
	out := new(ReverseResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Google service

type GoogleHandler interface {
	Geocode(context.Context, *GeocodeRequest, *GeocodeResponse) error
	ReverseGeocode(context.Context, *ReverseRequest, *ReverseResponse) error
}

func RegisterGoogleHandler(s server.Server, hdlr GoogleHandler) {
	s.Handle(s.NewHandler(&Google{hdlr}))
}

type Google struct {
	GoogleHandler
}

func (h *Google) Geocode(ctx context.Context, in *GeocodeRequest, out *GeocodeResponse) error {
	return h.GoogleHandler.Geocode(ctx, in, out)
}

func (h *Google) ReverseGeocode(ctx context.Context, in *ReverseRequest, out *ReverseResponse) error {
	return h.GoogleHandler.ReverseGeocode(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xeb, 0x84, 0xf8, 0x63, 0xa2, 0x36, 0xed, 0x22, 0xc0, 0x2d, 0x07, 0x8a, 0x4f, 0xbd,
	0xd4, 0x11, 0xa9, 0x40, 0x08, 0x24, 0x24, 0xbe, 0x14, 0xb8, 0xa1, 0xbc, 0x80, 0xb5, 0xb1, 0x07,
	0xc7, 0xc2, 0xf6, 0x1a, 0xef, 0x3a, 0x55, 0x1e, 0x81, 0x27, 0xe1, 0x45, 0x78, 0x30, 0xc6, 0xeb,
	0x4d, 0x88, 0x93, 0x13, 0xa7, 0xc8, 0x33, 0x9e, 0x99, 0xff, 0xfc, 0xe6, 0x1f, 0xc3, 0xab, 0x34,
	0x53, 0xab, 0x66, 0x19, 0xc6, 0xa2, 0x98, 0x16, 0x59, 0x5c, 0x8b, 0x69, 0x8a, 0x22, 0x16, 0x09,
	0xde, 0xca, 0x7a, 0x3d, 0xad, 0x6a, 0xa1, 0x28, 0x22, 0x44, 0x9a, 0xa3, 0xf9, 0x09, 0x75, 0x2c,
	0x78, 0x0e, 0xa3, 0x6f, 0x22, 0x2b, 0x15, 0x1b, 0xc3, 0x30, 0xe7, 0xca, 0xb7, 0xae, 0xad, 0x1b,
	0x4b, 0x3f, 0x94, 0xa9, 0x3f, 0x68, 0x1f, 0x82, 0x77, 0x60, 0x7f, 0x10, 0x4d, 0x99, 0x48, 0x76,
	0x09, 0x5e, 0x29, 0x6a, 0xb5, 0x42, 0x2e, 0xbb, 0x37, 0xc7, 0x33, 0x3b, 0xec, 0xca, 0x29, 0x25,
	0x45, 0xa3, 0x56, 0xf7, 0x48, 0xa9, 0xc1, 0x7e, 0x2a, 0xf8, 0x02, 0xe7, 0xef, 0x93, 0xa4, 0x46,
	0x29, 0x3f, 0x8a, 0xa2, 0x12, 0x25, 0xd2, 0xeb, 0x17, 0xe0, 0xe5, 0xa2, 0x4c, 0xa3, 0x92, 0x17,
	0xa8, 0x3b, 0x79, 0x8c, 0x01, 0xc8, 0x15, 0x75, 0xef, 0x62, 0x03, 0x1d, 0x3b, 0x85, 0x91, 0xda,
	0x54, 0x28, 0xfd, 0xe1, 0xf5, 0xf0, 0xc6, 0x0b, 0x7e, 0x5b, 0xe0, 0xce, 0x51, 0x14, 0xa8, 0xea,
	0x0d, 0x7b, 0x02, 0xf6, 0x52, 0xcb, 0x32, 0x4a, 0x9c, 0xd0, 0xa8, 0xf4, 0xc1, 0xcd, 0x45, 0xcc,
	0x55, 0x26, 0xca, 0xbe, 0x12, 0xf6, 0x08, 0x4e, 0xb7, 0x99, 0xa8, 0xed, 0x4b, 0x6d, 0xdb, 0x29,
	0x97, 0xe0, 0xae, 0x33, 0xbc, 0xaf, 0x68, 0xb8, 0xff, 0xa0, 0xdf, 0x8b, 0x2a, 0x2a, 0x5e, 0xab,
	0x8c, 0xe7, 0x51, 0xc1, 0x55, 0xbc, 0xf2, 0x47, 0x94, 0x77, 0xd9, 0x39, 0xb8, 0x55, 0xce, 0x63,
	0x8c, 0xb2, 0xc4, 0xb7, 0xfb, 0x4a, 0x1d, 0xad, 0x54, 0x80, 0xbd, 0x40, 0xd9, 0xe4, 0x8a, 0xdd,
	0x02, 0xe3, 0xdd, 0xf6, 0x51, 0xbc, 0x5d, 0xbf, 0x95, 0x3c, 0xa4, 0x31, 0x17, 0xe1, 0x11, 0x98,
	0x4b, 0xb8, 0xf8, 0x2e, 0x6a, 0x9a, 0xa5, 0x30, 0x89, 0x4c, 0xa1, 0x81, 0xf1, 0x14, 0xdc, 0xd4,
	0x2c, 0xaf, 0x85, 0x8f, 0x67, 0x5e, 0xb8, 0xa5, 0x11, 0xfc, 0xb1, 0xe0, 0x6c, 0xde, 0x5d, 0x7c,
	0x81, 0x3f, 0x1b, 0xba, 0x02, 0x9b, 0x80, 0xb3, 0x6d, 0xd0, 0x11, 0xbe, 0x03, 0xd8, 0x93, 0x30,
	0xd0, 0x12, 0x9e, 0x85, 0xfd, 0xaa, 0x70, 0x27, 0x45, 0x7e, 0x2e, 0xfb, 0x98, 0x87, 0x7d, 0x34,
	0xc4, 0x20, 0xe7, 0x65, 0xda, 0xf0, 0x14, 0x35, 0x35, 0x8f, 0x9d, 0x81, 0x5d, 0x63, 0xda, 0x62,
	0x6f, 0x29, 0x79, 0x57, 0x2f, 0x60, 0x72, 0xd8, 0x8d, 0x8c, 0xf5, 0x03, 0x37, 0x46, 0x0f, 0x31,
	0x5b, 0xf3, 0xbc, 0x31, 0xc7, 0x7e, 0x33, 0x78, 0x6d, 0x05, 0x6f, 0x61, 0xb2, 0xd3, 0x23, 0xa9,
	0x52, 0x22, 0x9d, 0xd3, 0xa9, 0x35, 0xca, 0x2d, 0x35, 0x27, 0x34, 0x68, 0x69, 0x9e, 0x54, 0x5c,
	0x35, 0x06, 0x50, 0xf0, 0x8b, 0x18, 0x2c, 0x70, 0x8d, 0xb5, 0xdc, 0x31, 0x78, 0x0c, 0x36, 0xb9,
	0xba, 0xf5, 0x72, 0xdf, 0xae, 0xfb, 0x07, 0xec, 0xe8, 0x12, 0x2d, 0x1d, 0xf9, 0xfa, 0xc9, 0xb8,
	0xe2, 0x78, 0xbf, 0x87, 0x30, 0xee, 0x94, 0x74, 0xe6, 0x19, 0xb5, 0x97, 0x3e, 0xf6, 0x94, 0xad,
	0x0d, 0x40, 0x8b, 0xec, 0xa4, 0xfc, 0xef, 0x22, 0x33, 0x72, 0xcf, 0x5c, 0xff, 0x49, 0x59, 0x08,
	0x8e, 0xe1, 0xc1, 0x26, 0x07, 0x97, 0xba, 0x3a, 0x0f, 0x0f, 0x50, 0x05, 0x27, 0xec, 0xe5, 0x8e,
	0xc0, 0xbf, 0xb2, 0x3e, 0x12, 0x2a, 0x3b, 0x10, 0x16, 0x9c, 0x2c, 0x6d, 0xfd, 0x31, 0xb8, 0xfb,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x57, 0xae, 0xb1, 0x46, 0x04, 0x00, 0x00,
}
